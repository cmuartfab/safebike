   1               		.file	"nrk_ext_int.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 305               	.global	nrk_ext_int_enable
 307               	nrk_ext_int_enable:
 308               		.stabd	46,0,0
   1:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** /******************************************************************************
   2:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  All rights reserved.
   5:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *
   6:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *
  10:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  it under the terms of the GNU General Public License as published by
  12:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *
  14:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  This program is distributed in the hope that it will be useful,
  15:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  GNU General Public License for more details.
  18:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *
  19:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  You should have received a copy of the GNU General Public License
  20:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *
  22:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  Contributing Authors (specific to this file):
  23:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *  Anthony Rowe
  24:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** *******************************************************************************/
  25:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
  26:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** #include <include.h>
  27:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** #include <avr/interrupt.h>
  28:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** #include <ulib.h>
  29:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** #include <nrk_ext_int.h>
  30:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** #include <nrk_error.h>
  31:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** #include <nrk_cfg.h>
  32:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
  33:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
  34:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** int8_t  nrk_ext_int_enable(uint8_t pin )
  35:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** {
 310               	.LM0:
 311               	.LFBB1:
 312               	/* prologue: function */
 313               	/* frame size = 0 */
 314               	/* stack size = 0 */
 315               	.L__stack_usage = 0
  36:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_EXT_INT_0) { EIMSK |= BM(INT0); return NRK_OK; }
 317               	.LM1:
 318 0000 8111      		cpse r24,__zero_reg__
 319 0002 00C0      		rjmp .L2
 321               	.LM2:
 322 0004 E89A      		sbi 0x1d,0
 323 0006 00C0      		rjmp .L15
 324               	.L2:
  37:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_EXT_INT_1) { EIMSK |= BM(INT1); return NRK_OK; }
 326               	.LM3:
 327 0008 8130      		cpi r24,lo8(1)
 328 000a 01F4      		brne .L4
 330               	.LM4:
 331 000c E99A      		sbi 0x1d,1
 332 000e 0895      		ret
 333               	.L4:
  38:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_EXT_INT_2) { EIMSK |= BM(INT2); return NRK_OK; }
 335               	.LM5:
 336 0010 8230      		cpi r24,lo8(2)
 337 0012 01F4      		brne .L5
 339               	.LM6:
 340 0014 EA9A      		sbi 0x1d,2
 341 0016 00C0      		rjmp .L15
 342               	.L5:
  39:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_0 ) { PCMSK0 |= BM(PCINT0); return NRK_OK; }
 344               	.LM7:
 345 0018 8330      		cpi r24,lo8(3)
 346 001a 01F4      		brne .L6
 348               	.LM8:
 349 001c 8091 6B00 		lds r24,107
 350 0020 8160      		ori r24,lo8(1)
 351 0022 00C0      		rjmp .L14
 352               	.L6:
  40:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_1 ) { PCMSK0 |= BM(PCINT1); return NRK_OK; }
 354               	.LM9:
 355 0024 8430      		cpi r24,lo8(4)
 356 0026 01F4      		brne .L7
 358               	.LM10:
 359 0028 8091 6B00 		lds r24,107
 360 002c 8260      		ori r24,lo8(2)
 361 002e 00C0      		rjmp .L14
 362               	.L7:
  41:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_2 ) { PCMSK0 |= BM(PCINT2); return NRK_OK; }
 364               	.LM11:
 365 0030 8530      		cpi r24,lo8(5)
 366 0032 01F4      		brne .L8
 368               	.LM12:
 369 0034 8091 6B00 		lds r24,107
 370 0038 8460      		ori r24,lo8(4)
 371 003a 00C0      		rjmp .L14
 372               	.L8:
  42:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_3 ) { PCMSK0 |= BM(PCINT3); return NRK_OK; }
 374               	.LM13:
 375 003c 8630      		cpi r24,lo8(6)
 376 003e 01F4      		brne .L9
 378               	.LM14:
 379 0040 8091 6B00 		lds r24,107
 380 0044 8860      		ori r24,lo8(8)
 381 0046 00C0      		rjmp .L14
 382               	.L9:
  43:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_4 ) { PCMSK0 |= BM(PCINT4); return NRK_OK; }
 384               	.LM15:
 385 0048 8730      		cpi r24,lo8(7)
 386 004a 01F4      		brne .L10
 388               	.LM16:
 389 004c 8091 6B00 		lds r24,107
 390 0050 8061      		ori r24,lo8(16)
 391 0052 00C0      		rjmp .L14
 392               	.L10:
  44:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_5 ) { PCMSK0 |= BM(PCINT5); return NRK_OK; }
 394               	.LM17:
 395 0054 8830      		cpi r24,lo8(8)
 396 0056 01F4      		brne .L11
 398               	.LM18:
 399 0058 8091 6B00 		lds r24,107
 400 005c 8062      		ori r24,lo8(32)
 401 005e 00C0      		rjmp .L14
 402               	.L11:
  45:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_6 ) { PCMSK0 |= BM(PCINT6); return NRK_OK; }
 404               	.LM19:
 405 0060 8930      		cpi r24,lo8(9)
 406 0062 01F4      		brne .L12
 408               	.LM20:
 409 0064 8091 6B00 		lds r24,107
 410 0068 8064      		ori r24,lo8(64)
 411 006a 00C0      		rjmp .L14
 412               	.L12:
  46:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_7 ) { PCMSK0 |= BM(PCINT7); return NRK_OK; }
 414               	.LM21:
 415 006c 8A30      		cpi r24,lo8(10)
 416 006e 01F4      		brne .L13
 418               	.LM22:
 419 0070 8091 6B00 		lds r24,107
 420 0074 8068      		ori r24,lo8(-128)
 421               	.L14:
 422 0076 8093 6B00 		sts 107,r24
 423               	.L15:
 424 007a 81E0      		ldi r24,lo8(1)
 425 007c 0895      		ret
 426               	.L13:
  47:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** return NRK_ERROR;
 428               	.LM23:
 429 007e 8FEF      		ldi r24,lo8(-1)
  48:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** }
 431               	.LM24:
 432 0080 0895      		ret
 434               	.Lscope1:
 436               		.stabd	78,0,0
 439               	.global	nrk_ext_int_disable
 441               	nrk_ext_int_disable:
 442               		.stabd	46,0,0
  49:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
  50:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** int8_t  nrk_ext_int_disable(uint8_t pin )
  51:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** {
 444               	.LM25:
 445               	.LFBB2:
 446               	/* prologue: function */
 447               	/* frame size = 0 */
 448               	/* stack size = 0 */
 449               	.L__stack_usage = 0
  52:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_EXT_INT_0) { EIMSK &= ~BM(INT0); return NRK_OK; }
 451               	.LM26:
 452 0082 8111      		cpse r24,__zero_reg__
 453 0084 00C0      		rjmp .L18
 455               	.LM27:
 456 0086 E898      		cbi 0x1d,0
 457 0088 00C0      		rjmp .L31
 458               	.L18:
  53:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_EXT_INT_1) { EIMSK &= ~BM(INT1); return NRK_OK; }
 460               	.LM28:
 461 008a 8130      		cpi r24,lo8(1)
 462 008c 01F4      		brne .L20
 464               	.LM29:
 465 008e E998      		cbi 0x1d,1
 466 0090 0895      		ret
 467               	.L20:
  54:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_EXT_INT_2) { EIMSK &= ~BM(INT1); return NRK_OK; }
 469               	.LM30:
 470 0092 8230      		cpi r24,lo8(2)
 471 0094 01F4      		brne .L21
 473               	.LM31:
 474 0096 E998      		cbi 0x1d,1
 475 0098 00C0      		rjmp .L31
 476               	.L21:
  55:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_0 ) { PCMSK0 &= ~BM(PCINT0); return NRK_OK; }
 478               	.LM32:
 479 009a 8330      		cpi r24,lo8(3)
 480 009c 01F4      		brne .L22
 482               	.LM33:
 483 009e 8091 6B00 		lds r24,107
 484 00a2 8E7F      		andi r24,lo8(-2)
 485 00a4 00C0      		rjmp .L30
 486               	.L22:
  56:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_1 ) { PCMSK0 &= ~BM(PCINT1); return NRK_OK; }
 488               	.LM34:
 489 00a6 8430      		cpi r24,lo8(4)
 490 00a8 01F4      		brne .L23
 492               	.LM35:
 493 00aa 8091 6B00 		lds r24,107
 494 00ae 8D7F      		andi r24,lo8(-3)
 495 00b0 00C0      		rjmp .L30
 496               	.L23:
  57:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_2 ) { PCMSK0 &= ~BM(PCINT2); return NRK_OK; }
 498               	.LM36:
 499 00b2 8530      		cpi r24,lo8(5)
 500 00b4 01F4      		brne .L24
 502               	.LM37:
 503 00b6 8091 6B00 		lds r24,107
 504 00ba 8B7F      		andi r24,lo8(-5)
 505 00bc 00C0      		rjmp .L30
 506               	.L24:
  58:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_3 ) { PCMSK0 &= ~BM(PCINT3); return NRK_OK; }
 508               	.LM38:
 509 00be 8630      		cpi r24,lo8(6)
 510 00c0 01F4      		brne .L25
 512               	.LM39:
 513 00c2 8091 6B00 		lds r24,107
 514 00c6 877F      		andi r24,lo8(-9)
 515 00c8 00C0      		rjmp .L30
 516               	.L25:
  59:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_4 ) { PCMSK0 &= ~BM(PCINT4); return NRK_OK; }
 518               	.LM40:
 519 00ca 8730      		cpi r24,lo8(7)
 520 00cc 01F4      		brne .L26
 522               	.LM41:
 523 00ce 8091 6B00 		lds r24,107
 524 00d2 8F7E      		andi r24,lo8(-17)
 525 00d4 00C0      		rjmp .L30
 526               	.L26:
  60:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_5 ) { PCMSK0 &= ~BM(PCINT5); return NRK_OK; }
 528               	.LM42:
 529 00d6 8830      		cpi r24,lo8(8)
 530 00d8 01F4      		brne .L27
 532               	.LM43:
 533 00da 8091 6B00 		lds r24,107
 534 00de 8F7D      		andi r24,lo8(-33)
 535 00e0 00C0      		rjmp .L30
 536               	.L27:
  61:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_6 ) { PCMSK0 &= ~BM(PCINT6); return NRK_OK; }
 538               	.LM44:
 539 00e2 8930      		cpi r24,lo8(9)
 540 00e4 01F4      		brne .L28
 542               	.LM45:
 543 00e6 8091 6B00 		lds r24,107
 544 00ea 8F7B      		andi r24,lo8(-65)
 545 00ec 00C0      		rjmp .L30
 546               	.L28:
  62:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_7 ) { PCMSK0 &= ~BM(PCINT7); return NRK_OK; }
 548               	.LM46:
 549 00ee 8A30      		cpi r24,lo8(10)
 550 00f0 01F4      		brne .L29
 552               	.LM47:
 553 00f2 8091 6B00 		lds r24,107
 554 00f6 8F77      		andi r24,lo8(127)
 555               	.L30:
 556 00f8 8093 6B00 		sts 107,r24
 557               	.L31:
 558 00fc 81E0      		ldi r24,lo8(1)
 559 00fe 0895      		ret
 560               	.L29:
  63:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** return NRK_ERROR;
 562               	.LM48:
 563 0100 8FEF      		ldi r24,lo8(-1)
  64:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** }
 565               	.LM49:
 566 0102 0895      		ret
 568               	.Lscope2:
 570               		.stabd	78,0,0
 575               	.global	nrk_ext_int_configure
 577               	nrk_ext_int_configure:
 578               		.stabd	46,0,0
  65:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
  66:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
  67:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
  68:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** int8_t  nrk_ext_int_configure(uint8_t pin, uint8_t mode, void *callback_func)
  69:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** {
 580               	.LM50:
 581               	.LFBB3:
 582               	/* prologue: function */
 583               	/* frame size = 0 */
 584               	/* stack size = 0 */
 585               	.L__stack_usage = 0
  70:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_EXT_INT_0)
 587               	.LM51:
 588 0104 8111      		cpse r24,__zero_reg__
 589 0106 00C0      		rjmp .L33
  71:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	{
  72:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	ext_int0_callback=callback_func;
 591               	.LM52:
 592 0108 5093 0000 		sts ext_int0_callback+1,r21
 593 010c 4093 0000 		sts ext_int0_callback,r20
  73:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_LOW_TRIGGER) EICRA &= ~(BM(ISC01) | BM(ISC00));
 595               	.LM53:
 596 0110 6111      		cpse r22,__zero_reg__
 597 0112 00C0      		rjmp .L34
 599               	.LM54:
 600 0114 8091 6900 		lds r24,105
 601 0118 8C7F      		andi r24,lo8(-4)
 602 011a 00C0      		rjmp .L51
 603               	.L34:
  74:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_LEVEL_TRIGGER) 
 605               	.LM55:
 606 011c 6130      		cpi r22,lo8(1)
 607 011e 01F4      		brne .L36
  75:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 		{ EICRA &= (~BM(ISC01)); EICRA |= BM(ISC00); }
 609               	.LM56:
 610 0120 8091 6900 		lds r24,105
 611 0124 8D7F      		andi r24,lo8(-3)
 612 0126 8093 6900 		sts 105,r24
 613 012a 8091 6900 		lds r24,105
 614 012e 8160      		ori r24,lo8(1)
 615 0130 00C0      		rjmp .L51
 616               	.L36:
  76:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_FALLING_EDGE) 
 618               	.LM57:
 619 0132 6230      		cpi r22,lo8(2)
 620 0134 01F4      		brne .L38
  77:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 		{ EICRA |= BM(ISC01); EICRA &= (~BM(ISC00)); }
 622               	.LM58:
 623 0136 8091 6900 		lds r24,105
 624 013a 8260      		ori r24,lo8(2)
 625 013c 8093 6900 		sts 105,r24
 626 0140 8091 6900 		lds r24,105
 627 0144 8E7F      		andi r24,lo8(-2)
 628 0146 00C0      		rjmp .L51
 629               	.L38:
  78:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_RISING_EDGE) EICRA |= BM(ISC01) | BM(ISC00);
 631               	.LM59:
 632 0148 6330      		cpi r22,lo8(3)
 633 014a 01F4      		brne .L50
 635               	.LM60:
 636 014c 8091 6900 		lds r24,105
 637 0150 8360      		ori r24,lo8(3)
 638 0152 00C0      		rjmp .L51
 639               	.L33:
  79:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	return NRK_OK;
  80:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	}
  81:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_EXT_INT_1)
 641               	.LM61:
 642 0154 8130      		cpi r24,lo8(1)
 643 0156 01F4      		brne .L40
  82:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	{
  83:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	ext_int1_callback=callback_func;
 645               	.LM62:
 646 0158 5093 0000 		sts ext_int1_callback+1,r21
 647 015c 4093 0000 		sts ext_int1_callback,r20
  84:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_LOW_TRIGGER) EICRA &= ~(BM(ISC11) | BM(ISC10));
 649               	.LM63:
 650 0160 6111      		cpse r22,__zero_reg__
 651 0162 00C0      		rjmp .L41
 653               	.LM64:
 654 0164 8091 6900 		lds r24,105
 655 0168 837F      		andi r24,lo8(-13)
 656 016a 00C0      		rjmp .L51
 657               	.L41:
  85:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_LEVEL_TRIGGER) 
 659               	.LM65:
 660 016c 6130      		cpi r22,lo8(1)
 661 016e 01F4      		brne .L42
  86:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 		{ EICRA &= (~BM(ISC11)); EICRA |= BM(ISC10); }
 663               	.LM66:
 664 0170 8091 6900 		lds r24,105
 665 0174 877F      		andi r24,lo8(-9)
 666 0176 8093 6900 		sts 105,r24
 667 017a 8091 6900 		lds r24,105
 668 017e 8460      		ori r24,lo8(4)
 669 0180 00C0      		rjmp .L51
 670               	.L42:
  87:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_FALLING_EDGE) 
 672               	.LM67:
 673 0182 6230      		cpi r22,lo8(2)
 674 0184 01F4      		brne .L43
  88:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 		{ EICRA |= BM(ISC11); EICRA &= (~BM(ISC10)); }
 676               	.LM68:
 677 0186 8091 6900 		lds r24,105
 678 018a 8860      		ori r24,lo8(8)
 679 018c 8093 6900 		sts 105,r24
 680 0190 8091 6900 		lds r24,105
 681 0194 8B7F      		andi r24,lo8(-5)
 682               	.L51:
 683 0196 8093 6900 		sts 105,r24
 684               	.L50:
  89:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_RISING_EDGE) EICRA |= BM(ISC11) | BM(ISC10);
  90:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	return NRK_OK;
 686               	.LM69:
 687 019a 81E0      		ldi r24,lo8(1)
 688 019c 0895      		ret
 689               	.L43:
  89:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_RISING_EDGE) EICRA |= BM(ISC11) | BM(ISC10);
 691               	.LM70:
 692 019e 6330      		cpi r22,lo8(3)
 693 01a0 01F4      		brne .L50
  89:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_RISING_EDGE) EICRA |= BM(ISC11) | BM(ISC10);
 695               	.LM71:
 696 01a2 8091 6900 		lds r24,105
 697 01a6 8C60      		ori r24,lo8(12)
 698 01a8 00C0      		rjmp .L51
 699               	.L40:
  91:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	}
  92:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_EXT_INT_2)
 701               	.LM72:
 702 01aa 8230      		cpi r24,lo8(2)
 703 01ac 01F4      		brne .L44
  93:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	{
  94:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	ext_int2_callback=callback_func;
 705               	.LM73:
 706 01ae 5093 0000 		sts ext_int2_callback+1,r21
 707 01b2 4093 0000 		sts ext_int2_callback,r20
  95:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_LOW_TRIGGER) EICRA &= ~(BM(ISC21) | BM(ISC20));
 709               	.LM74:
 710 01b6 6111      		cpse r22,__zero_reg__
 711 01b8 00C0      		rjmp .L45
 713               	.LM75:
 714 01ba 8091 6900 		lds r24,105
 715 01be 8F7C      		andi r24,lo8(-49)
 716 01c0 00C0      		rjmp .L51
 717               	.L45:
  96:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_LEVEL_TRIGGER) 
 719               	.LM76:
 720 01c2 6130      		cpi r22,lo8(1)
 721 01c4 01F4      		brne .L46
  97:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 		{ EICRA &= (~BM(ISC21)); EICRA |= BM(ISC20); }
 723               	.LM77:
 724 01c6 8091 6900 		lds r24,105
 725 01ca 8F7D      		andi r24,lo8(-33)
 726 01cc 8093 6900 		sts 105,r24
 727 01d0 8091 6900 		lds r24,105
 728 01d4 8061      		ori r24,lo8(16)
 729 01d6 00C0      		rjmp .L51
 730               	.L46:
  98:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_FALLING_EDGE) 
 732               	.LM78:
 733 01d8 6230      		cpi r22,lo8(2)
 734 01da 01F4      		brne .L47
  99:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 		{ EICRA |= BM(ISC21); EICRA &= (~BM(ISC20)); }
 736               	.LM79:
 737 01dc 8091 6900 		lds r24,105
 738 01e0 8062      		ori r24,lo8(32)
 739 01e2 8093 6900 		sts 105,r24
 740 01e6 8091 6900 		lds r24,105
 741 01ea 8F7E      		andi r24,lo8(-17)
 742 01ec 00C0      		rjmp .L51
 743               	.L47:
 100:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(mode==NRK_RISING_EDGE) EICRA |= BM(ISC21) | BM(ISC20);
 745               	.LM80:
 746 01ee 6330      		cpi r22,lo8(3)
 747 01f0 01F4      		brne .L50
 749               	.LM81:
 750 01f2 8091 6900 		lds r24,105
 751 01f6 8063      		ori r24,lo8(48)
 752 01f8 00C0      		rjmp .L51
 753               	.L44:
 101:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	return NRK_OK;
 102:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	}
 103:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
 104:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
 105:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
 106:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** if(pin==NRK_PC_INT_0 || pin==NRK_PC_INT_1 || pin==NRK_PC_INT_2 || pin==NRK_PC_INT_3 || pin==NRK_PC_
 755               	.LM82:
 756 01fa 8350      		subi r24,lo8(-(-3))
 757 01fc 8830      		cpi r24,lo8(8)
 758 01fe 00F4      		brsh .L48
 107:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	PCICR |= BM(PCIE0);	
 760               	.LM83:
 761 0200 8091 6800 		lds r24,104
 762 0204 8160      		ori r24,lo8(1)
 763 0206 8093 6800 		sts 104,r24
 108:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	pc_int0_callback=callback_func;
 765               	.LM84:
 766 020a 5093 0000 		sts pc_int0_callback+1,r21
 767 020e 4093 0000 		sts pc_int0_callback,r20
 768 0212 00C0      		rjmp .L50
 769               	.L48:
 109:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	return NRK_OK;
 110:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	}
 111:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** return NRK_ERROR;
 771               	.LM85:
 772 0214 8FEF      		ldi r24,lo8(-1)
 112:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** }
 774               	.LM86:
 775 0216 0895      		ret
 777               	.Lscope3:
 779               		.stabd	78,0,0
 781               	.global	__vector_9
 783               	__vector_9:
 784               		.stabd	46,0,0
 113:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
 114:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** #ifndef NRK_DISABLE_EXT_INT
 115:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** SIGNAL(PCINT0_vect) {
 786               	.LM87:
 787               	.LFBB4:
 788 0218 1F92      		push r1
 789 021a 0F92      		push r0
 790 021c 0FB6      		in r0,__SREG__
 791 021e 0F92      		push r0
 792 0220 1124      		clr __zero_reg__
 793 0222 0BB6      		in r0,__RAMPZ__
 794 0224 0F92      		push r0
 795 0226 2F93      		push r18
 796 0228 3F93      		push r19
 797 022a 4F93      		push r20
 798 022c 5F93      		push r21
 799 022e 6F93      		push r22
 800 0230 7F93      		push r23
 801 0232 8F93      		push r24
 802 0234 9F93      		push r25
 803 0236 AF93      		push r26
 804 0238 BF93      		push r27
 805 023a EF93      		push r30
 806 023c FF93      		push r31
 807               	/* prologue: Signal */
 808               	/* frame size = 0 */
 809               	/* stack size = 16 */
 810               	.L__stack_usage = 16
 116:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(pc_int0_callback!=NULL) pc_int0_callback();
 812               	.LM88:
 813 023e E091 0000 		lds r30,pc_int0_callback
 814 0242 F091 0000 		lds r31,pc_int0_callback+1
 815 0246 3097      		sbiw r30,0
 816 0248 01F0      		breq .L53
 818               	.LM89:
 819 024a 0995      		icall
 820 024c 00C0      		rjmp .L52
 821               	.L53:
 117:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	else
 118:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	nrk_kernel_error_add(NRK_SEG_FAULT,0);
 823               	.LM90:
 824 024e 60E0      		ldi r22,0
 825 0250 8AE0      		ldi r24,lo8(10)
 826 0252 0E94 0000 		call nrk_kernel_error_add
 827               	.L52:
 828               	/* epilogue start */
 119:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	return;  	
 120:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** }
 830               	.LM91:
 831 0256 FF91      		pop r31
 832 0258 EF91      		pop r30
 833 025a BF91      		pop r27
 834 025c AF91      		pop r26
 835 025e 9F91      		pop r25
 836 0260 8F91      		pop r24
 837 0262 7F91      		pop r23
 838 0264 6F91      		pop r22
 839 0266 5F91      		pop r21
 840 0268 4F91      		pop r20
 841 026a 3F91      		pop r19
 842 026c 2F91      		pop r18
 843 026e 0F90      		pop r0
 844 0270 0BBE      		out __RAMPZ__,r0
 845 0272 0F90      		pop r0
 846 0274 0FBE      		out __SREG__,r0
 847 0276 0F90      		pop r0
 848 0278 1F90      		pop r1
 849 027a 1895      		reti
 851               	.Lscope4:
 853               		.stabd	78,0,0
 855               	.global	__vector_1
 857               	__vector_1:
 858               		.stabd	46,0,0
 121:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
 122:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
 123:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** SIGNAL(INT0_vect) {
 860               	.LM92:
 861               	.LFBB5:
 862 027c 1F92      		push r1
 863 027e 0F92      		push r0
 864 0280 0FB6      		in r0,__SREG__
 865 0282 0F92      		push r0
 866 0284 1124      		clr __zero_reg__
 867 0286 0BB6      		in r0,__RAMPZ__
 868 0288 0F92      		push r0
 869 028a 2F93      		push r18
 870 028c 3F93      		push r19
 871 028e 4F93      		push r20
 872 0290 5F93      		push r21
 873 0292 6F93      		push r22
 874 0294 7F93      		push r23
 875 0296 8F93      		push r24
 876 0298 9F93      		push r25
 877 029a AF93      		push r26
 878 029c BF93      		push r27
 879 029e EF93      		push r30
 880 02a0 FF93      		push r31
 881               	/* prologue: Signal */
 882               	/* frame size = 0 */
 883               	/* stack size = 16 */
 884               	.L__stack_usage = 16
 124:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(ext_int0_callback!=NULL) ext_int0_callback();
 886               	.LM93:
 887 02a2 E091 0000 		lds r30,ext_int0_callback
 888 02a6 F091 0000 		lds r31,ext_int0_callback+1
 889 02aa 3097      		sbiw r30,0
 890 02ac 01F0      		breq .L56
 892               	.LM94:
 893 02ae 0995      		icall
 894 02b0 00C0      		rjmp .L55
 895               	.L56:
 125:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	else
 126:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	nrk_kernel_error_add(NRK_SEG_FAULT,0);
 897               	.LM95:
 898 02b2 60E0      		ldi r22,0
 899 02b4 8AE0      		ldi r24,lo8(10)
 900 02b6 0E94 0000 		call nrk_kernel_error_add
 901               	.L55:
 902               	/* epilogue start */
 127:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	return;  	
 128:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** }
 904               	.LM96:
 905 02ba FF91      		pop r31
 906 02bc EF91      		pop r30
 907 02be BF91      		pop r27
 908 02c0 AF91      		pop r26
 909 02c2 9F91      		pop r25
 910 02c4 8F91      		pop r24
 911 02c6 7F91      		pop r23
 912 02c8 6F91      		pop r22
 913 02ca 5F91      		pop r21
 914 02cc 4F91      		pop r20
 915 02ce 3F91      		pop r19
 916 02d0 2F91      		pop r18
 917 02d2 0F90      		pop r0
 918 02d4 0BBE      		out __RAMPZ__,r0
 919 02d6 0F90      		pop r0
 920 02d8 0FBE      		out __SREG__,r0
 921 02da 0F90      		pop r0
 922 02dc 1F90      		pop r1
 923 02de 1895      		reti
 925               	.Lscope5:
 927               		.stabd	78,0,0
 929               	.global	__vector_2
 931               	__vector_2:
 932               		.stabd	46,0,0
 129:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
 130:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** SIGNAL(INT1_vect) {
 934               	.LM97:
 935               	.LFBB6:
 936 02e0 1F92      		push r1
 937 02e2 0F92      		push r0
 938 02e4 0FB6      		in r0,__SREG__
 939 02e6 0F92      		push r0
 940 02e8 1124      		clr __zero_reg__
 941 02ea 0BB6      		in r0,__RAMPZ__
 942 02ec 0F92      		push r0
 943 02ee 2F93      		push r18
 944 02f0 3F93      		push r19
 945 02f2 4F93      		push r20
 946 02f4 5F93      		push r21
 947 02f6 6F93      		push r22
 948 02f8 7F93      		push r23
 949 02fa 8F93      		push r24
 950 02fc 9F93      		push r25
 951 02fe AF93      		push r26
 952 0300 BF93      		push r27
 953 0302 EF93      		push r30
 954 0304 FF93      		push r31
 955               	/* prologue: Signal */
 956               	/* frame size = 0 */
 957               	/* stack size = 16 */
 958               	.L__stack_usage = 16
 131:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(ext_int1_callback!=NULL) ext_int1_callback();
 960               	.LM98:
 961 0306 E091 0000 		lds r30,ext_int1_callback
 962 030a F091 0000 		lds r31,ext_int1_callback+1
 963 030e 3097      		sbiw r30,0
 964 0310 01F0      		breq .L59
 966               	.LM99:
 967 0312 0995      		icall
 968 0314 00C0      		rjmp .L58
 969               	.L59:
 132:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	else
 133:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	nrk_kernel_error_add(NRK_SEG_FAULT,0);
 971               	.LM100:
 972 0316 60E0      		ldi r22,0
 973 0318 8AE0      		ldi r24,lo8(10)
 974 031a 0E94 0000 		call nrk_kernel_error_add
 975               	.L58:
 976               	/* epilogue start */
 134:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	return;  	
 135:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** }
 978               	.LM101:
 979 031e FF91      		pop r31
 980 0320 EF91      		pop r30
 981 0322 BF91      		pop r27
 982 0324 AF91      		pop r26
 983 0326 9F91      		pop r25
 984 0328 8F91      		pop r24
 985 032a 7F91      		pop r23
 986 032c 6F91      		pop r22
 987 032e 5F91      		pop r21
 988 0330 4F91      		pop r20
 989 0332 3F91      		pop r19
 990 0334 2F91      		pop r18
 991 0336 0F90      		pop r0
 992 0338 0BBE      		out __RAMPZ__,r0
 993 033a 0F90      		pop r0
 994 033c 0FBE      		out __SREG__,r0
 995 033e 0F90      		pop r0
 996 0340 1F90      		pop r1
 997 0342 1895      		reti
 999               	.Lscope6:
 1001               		.stabd	78,0,0
 1003               	.global	__vector_3
 1005               	__vector_3:
 1006               		.stabd	46,0,0
 136:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 
 137:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** SIGNAL(INT2_vect) {
 1008               	.LM102:
 1009               	.LFBB7:
 1010 0344 1F92      		push r1
 1011 0346 0F92      		push r0
 1012 0348 0FB6      		in r0,__SREG__
 1013 034a 0F92      		push r0
 1014 034c 1124      		clr __zero_reg__
 1015 034e 0BB6      		in r0,__RAMPZ__
 1016 0350 0F92      		push r0
 1017 0352 2F93      		push r18
 1018 0354 3F93      		push r19
 1019 0356 4F93      		push r20
 1020 0358 5F93      		push r21
 1021 035a 6F93      		push r22
 1022 035c 7F93      		push r23
 1023 035e 8F93      		push r24
 1024 0360 9F93      		push r25
 1025 0362 AF93      		push r26
 1026 0364 BF93      		push r27
 1027 0366 EF93      		push r30
 1028 0368 FF93      		push r31
 1029               	/* prologue: Signal */
 1030               	/* frame size = 0 */
 1031               	/* stack size = 16 */
 1032               	.L__stack_usage = 16
 138:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	if(ext_int2_callback!=NULL) ext_int2_callback();
 1034               	.LM103:
 1035 036a E091 0000 		lds r30,ext_int2_callback
 1036 036e F091 0000 		lds r31,ext_int2_callback+1
 1037 0372 3097      		sbiw r30,0
 1038 0374 01F0      		breq .L62
 1040               	.LM104:
 1041 0376 0995      		icall
 1042 0378 00C0      		rjmp .L61
 1043               	.L62:
 139:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	else
 140:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	nrk_kernel_error_add(NRK_SEG_FAULT,0);
 1045               	.LM105:
 1046 037a 60E0      		ldi r22,0
 1047 037c 8AE0      		ldi r24,lo8(10)
 1048 037e 0E94 0000 		call nrk_kernel_error_add
 1049               	.L61:
 1050               	/* epilogue start */
 141:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** 	return;  	
 142:../../src/kernel/hal/atmega128rfa1/nrk_ext_int.c **** }
 1052               	.LM106:
 1053 0382 FF91      		pop r31
 1054 0384 EF91      		pop r30
 1055 0386 BF91      		pop r27
 1056 0388 AF91      		pop r26
 1057 038a 9F91      		pop r25
 1058 038c 8F91      		pop r24
 1059 038e 7F91      		pop r23
 1060 0390 6F91      		pop r22
 1061 0392 5F91      		pop r21
 1062 0394 4F91      		pop r20
 1063 0396 3F91      		pop r19
 1064 0398 2F91      		pop r18
 1065 039a 0F90      		pop r0
 1066 039c 0BBE      		out __RAMPZ__,r0
 1067 039e 0F90      		pop r0
 1068 03a0 0FBE      		out __SREG__,r0
 1069 03a2 0F90      		pop r0
 1070 03a4 1F90      		pop r1
 1071 03a6 1895      		reti
 1073               	.Lscope7:
 1075               		.stabd	78,0,0
 1076               		.comm	error_num,1,1
 1077               		.comm	error_task,1,1
 1078               		.comm	pc_int0_callback,2,1
 1079               		.comm	ext_int2_callback,2,1
 1080               		.comm	ext_int1_callback,2,1
 1081               		.comm	ext_int0_callback,2,1
 1082               		.comm	_nrk_signal_list,4,1
 1091               	.Letext0:
 1092               		.ident	"GCC: (GNU) 4.9.1"
 1093               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 nrk_ext_int.c
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:4      *ABS*:000000000000003f __SREG__
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:5      *ABS*:000000000000003b __RAMPZ__
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:6      *ABS*:0000000000000000 __tmp_reg__
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:7      *ABS*:0000000000000001 __zero_reg__
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:307    .text:0000000000000000 nrk_ext_int_enable
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:441    .text:0000000000000082 nrk_ext_int_disable
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:577    .text:0000000000000104 nrk_ext_int_configure
                            *COM*:0000000000000002 ext_int0_callback
                            *COM*:0000000000000002 ext_int1_callback
                            *COM*:0000000000000002 ext_int2_callback
                            *COM*:0000000000000002 pc_int0_callback
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:783    .text:0000000000000218 __vector_9
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:857    .text:000000000000027c __vector_1
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:931    .text:00000000000002e0 __vector_2
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccgLeM9z.s:1005   .text:0000000000000344 __vector_3
                            *COM*:0000000000000001 error_num
                            *COM*:0000000000000001 error_task
                            *COM*:0000000000000004 _nrk_signal_list

UNDEFINED SYMBOLS
nrk_kernel_error_add
__do_clear_bss
