   1               		.file	"twi_base_calls.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 331               	.global	set_i2c_device
 333               	set_i2c_device:
 334               		.stabd	46,0,0
   1:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
   2:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * ----------------------------------------------------------------------------
   3:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * "THE BEER-WARE LICENSE" (Revision 42):
   4:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * <joerg@FreeBSD.ORG> wrote this file.  As long as you retain this notice you
   5:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * can do whatever you want with this stuff. If we meet some day, and you think
   6:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * this stuff is worth it, you can buy me a beer in return.        Joerg Wunsch
   7:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * ----------------------------------------------------------------------------
   8:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
   9:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
  10:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * ----------------------------------------------------------------------------
  11:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Updated to handle larger devices having 16-bit addresses
  12:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  *                                                 (2007-09-05) Ruwan Jayanetti
  13:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * ----------------------------------------------------------------------------
  14:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
  15:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  16:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <nrk.h>
  17:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <include.h>
  18:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <ulib.h>
  19:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <stdio.h>
  20:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <hal.h>
  21:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <nrk_error.h>
  22:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <nrk_timer.h>
  23:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <nrk_stack_check.h>
  24:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <nrk_stats.h>
  25:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  26:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <inttypes.h>
  27:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <stdio.h>
  28:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <stdlib.h>
  29:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  30:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <avr/io.h>
  31:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <util/twi.h>		/* Note [1] */
  32:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  33:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <math.h>
  34:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #include <twi_base_calls.h>
  35:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  36:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #define DEBUG 0
  37:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  38:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
  39:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * System clock in Hz.
  40:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
  41:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #define F_CPU 16000000UL	/* 16 MHz for the AtMega128RFA1 */
  42:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  43:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
  44:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Compatibility defines.  This should work on ATmega8, ATmega16,
  45:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * ATmega163, ATmega323 and ATmega128 (IOW: on all devices that
  46:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * provide a builtin TWI interface).
  47:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  *
  48:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * On the 128, it defaults to USART 1.
  49:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
  50:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #ifndef UCSRB
  51:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** # ifdef UCSR1A		/* ATmega128 */
  52:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #  define UCSRA UCSR1A
  53:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #  define UCSRB UCSR1B
  54:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #  define UBRR UBRR1L
  55:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #  define UDR UDR1
  56:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** # else /* ATmega8 */
  57:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #  define UCSRA USR
  58:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #  define UCSRB UCR
  59:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** # endif
  60:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #endif
  61:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #ifndef UBRR
  62:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #  define UBRR UBRRL
  63:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #endif
  64:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  65:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
  66:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Note [3]
  67:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * TWI address for Bosch EEPROM:
  68:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
  69:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** //#define TWI_SLA_24CXX	0xEE
  70:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** //#define TWI_SLA_24CXX 0xA0
  71:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  72:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  73:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  74:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
  75:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Maximal number of iterations to wait for a device to respond for a
  76:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * selection.  Should be large enough to allow for a pending write to
  77:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * complete, but low enough to properly abort an infinite loop in case
  78:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * a slave is broken or not present at all.  With 100 kHz TWI clock,
  79:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * transfering the start condition and SLA+R/W packet takes about 10
  80:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Âµs.  The longest write period is supposed to not exceed ~ 10 ms.
  81:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Thus, normal operation should not require more than 100 iterations
  82:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * to get the device to respond to a selection.
  83:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
  84:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #define MAX_ITER	100
  85:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  86:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
  87:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Number of bytes that can be written in a row, see comments for
  88:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * ee24xx_write_page() below.  Some vendor's devices would accept 16,
  89:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * but 8 seems to be the lowest common denominator.
  90:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  *
  91:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Note that the page size must be a power of two, this simplifies the
  92:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * page boundary calculations below.
  93:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
  94:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #define PAGE_SIZE 8
  95:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
  96:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
  97:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Saved TWI status register, for error messages only.  We need to
  98:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * save it in a variable, since the datasheet only guarantees the TWSR
  99:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * register to have valid contents while the TWINT bit in TWCR is set.
 100:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
 101:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** uint8_t twst;
 102:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 103:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** uint8_t i2c_address; // The address of the slave node to write to
 104:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 105:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** void set_i2c_device(uint8_t address)
 106:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** {
 336               	.LM0:
 337               	.LFBB1:
 338               	/* prologue: function */
 339               	/* frame size = 0 */
 340               	/* stack size = 0 */
 341               	.L__stack_usage = 0
 107:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     i2c_address = address;
 343               	.LM1:
 344 0000 8093 0000 		sts i2c_address,r24
 345 0004 0895      		ret
 347               	.Lscope1:
 349               		.stabd	78,0,0
 351               	.global	init_i2c
 353               	init_i2c:
 354               		.stabd	46,0,0
 108:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** }
 109:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 110:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
 111:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Do all the startup-time peripheral initializations: UART (for our
 112:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * debug/test output), and TWI clock.
 113:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  *
 114:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Formula for setting the SCL clock frequency is on page 383 of the ATmega128RFA1 datasheet
 115:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
 116:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** void init_i2c(void)
 117:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** {
 356               	.LM2:
 357               	.LFBB2:
 358               	/* prologue: function */
 359               	/* frame size = 0 */
 360               	/* stack size = 0 */
 361               	.L__stack_usage = 0
 118:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 119:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   // Set up the SCL frequency
 120:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   // To operate at a clock frequency of 1 MHz, set TWBR and TWPS to 0
 121:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   // TODO: Generalize later
 122:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWBR = 0x02; // TWI Bit Rate Register
 363               	.LM3:
 364 0006 82E0      		ldi r24,lo8(2)
 365 0008 8093 B800 		sts 184,r24
 123:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWSR = 0x00; // TWPS is the value of the prescaler in the TWI status register (the 2 LSB)
 367               	.LM4:
 368 000c 1092 B900 		sts 185,__zero_reg__
 124:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 125:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   // Enable the SCL/SDA
 126:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   PRR0 = PRR0 & 0x7F; // Set the MSB in PRRO to 0 (see page 378)
 370               	.LM5:
 371 0010 E4E6      		ldi r30,lo8(100)
 372 0012 F0E0      		ldi r31,0
 373 0014 8081      		ld r24,Z
 374 0016 8F77      		andi r24,lo8(127)
 375 0018 8083      		st Z,r24
 127:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = TWCR | 0x04; // Set the TWEN bit in the TWCR (see page 196)
 377               	.LM6:
 378 001a ECEB      		ldi r30,lo8(-68)
 379 001c F0E0      		ldi r31,0
 380 001e 8081      		ld r24,Z
 381 0020 8460      		ori r24,lo8(4)
 382 0022 8083      		st Z,r24
 383 0024 0895      		ret
 385               	.Lscope2:
 387               		.stabd	78,0,0
 389               	.global	close_i2c
 391               	close_i2c:
 392               		.stabd	46,0,0
 128:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 129:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** }
 130:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 131:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** void close_i2c(void)
 132:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** {
 394               	.LM7:
 395               	.LFBB3:
 396               	/* prologue: function */
 397               	/* frame size = 0 */
 398               	/* stack size = 0 */
 399               	.L__stack_usage = 0
 133:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****    PRR0 = PRR0 & 0xFF; // Set the MSB in PRRO to 1 (see page 378)
 401               	.LM8:
 402 0026 E4E6      		ldi r30,lo8(100)
 403 0028 F0E0      		ldi r31,0
 404 002a 8081      		ld r24,Z
 405 002c 8083      		st Z,r24
 134:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****    TWCR = TWCR & 0xFB; // Set the TWEN bit in the TWCR (see page 196)
 407               	.LM9:
 408 002e ECEB      		ldi r30,lo8(-68)
 409 0030 F0E0      		ldi r31,0
 410 0032 8081      		ld r24,Z
 411 0034 8B7F      		andi r24,lo8(-5)
 412 0036 8083      		st Z,r24
 413 0038 0895      		ret
 415               	.Lscope3:
 417               		.stabd	78,0,0
 421               	.global	ee24xx_read_bytes
 423               	ee24xx_read_bytes:
 424               		.stabd	46,0,0
 135:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** }
 136:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 137:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
 138:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Note [6]
 139:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Send character c down the UART Tx, wait until tx holding register
 140:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * is empty.
 141:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
 142:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*int
 143:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** uart_putchar(char c, FILE *unused)
 144:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** {
 145:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 146:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     printf("uart_putchar with char %c", c);
 147:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 148:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   if (c == '\n')
 149:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     uart_putchar('\r', 0);
 150:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   loop_until_bit_is_set(UCSRA, UDRE0);
 151:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   UDR = c;
 152:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   return 0;
 153:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** }*/
 154:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 155:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
 156:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Note [7]
 157:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  *
 158:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Read "len" bytes from EEPROM starting at "eeaddr" into "buf".
 159:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  *
 160:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * This requires two bus cycles: during the first cycle, the device
 161:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * will be selected (master transmitter mode), and the address
 162:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * transfered.  Address bits exceeding 256 are transfered in the
 163:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * E2/E1/E0 bits (subaddress bits) of the device selector.
 164:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  *
 165:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * The second bus cycle will reselect the device (repeated start
 166:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * condition, going into master receiver mode), and transfer the data
 167:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * from the device to the TWI master.  Multiple bytes can be
 168:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * transfered by ACKing the client's transfer.  The last transfer will
 169:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * be NACKed, which the client will take as an indication to not
 170:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * initiate further transfers.
 171:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
 172:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** int
 173:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** ee24xx_read_bytes(uint16_t eeaddr, int len, uint8_t *buf)
 174:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** {
 426               	.LM10:
 427               	.LFBB4:
 428               	/* prologue: function */
 429               	/* frame size = 0 */
 430               	/* stack size = 0 */
 431               	.L__stack_usage = 0
 175:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 176:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 177:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   uint8_t sla, twcr, n = 0;
 178:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   int rv = 0;
 179:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 180:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   /* patch high bits of EEPROM address into SLA */
 181:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   sla = i2c_address | (((eeaddr >> 8) & 0x07) << 1);
 433               	.LM11:
 434 003a 9770      		andi r25,lo8(7)
 435 003c 990F      		lsl r25
 436 003e 2091 0000 		lds r18,i2c_address
 437 0042 922B      		or r25,r18
 438 0044 35E6      		ldi r19,lo8(101)
 182:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 183:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   /*
 184:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****    * Note [8]
 185:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****    * First cycle: master transmitter mode
 186:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****    */
 187:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   restart:
 188:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   if (n++ >= MAX_ITER)
 189:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     return -1;
 190:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   begin:
 191:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 192:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWSTA) | _BV(TWEN); /* send start condition */
 440               	.LM12:
 441 0046 F4EA      		ldi r31,lo8(-92)
 442 0048 A4EA      		ldi r26,lo8(-92)
 193:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 194:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   switch ((twst = TW_STATUS))
 195:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 196:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_REP_START:		/* OK, but should not happen */
 197:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_START:
 198:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       break;
 199:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 200:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_ARB_LOST:	/* Note [9] */
 201:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto begin;
 202:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 203:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     default:
 204:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       return -1;		/* error: not in start condition */
 205:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 				/* NB: do /not/ send stop condition */
 206:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     }
 207:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 208:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   /* Note [10] */
 209:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   /* send SLA+W */
 210:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWDR = sla | TW_WRITE;
 211:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWEN); /* clear interrupt to start transmission */
 444               	.LM13:
 445 004a E4E8      		ldi r30,lo8(-124)
 212:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 213:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   switch ((twst = TW_STATUS))
 214:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 215:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_SLA_ACK:
 216:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       break;
 217:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 218:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_SLA_NACK:	/* nack during select: device busy writing */
 219:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 				/* Note [11] */
 220:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto restart;
 221:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 222:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_ARB_LOST:	/* re-arbitrate */
 223:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto begin;
 224:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 225:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     default:
 226:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto error;		/* must send stop condition */
 227:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     }
 228:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 229:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWDR = eeaddr;		/* low 8 bits of addr */
 230:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWEN); /* clear interrupt to start transmission */
 231:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 232:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   switch ((twst = TW_STATUS))
 233:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 234:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_DATA_ACK:
 235:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       break;
 236:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 237:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_DATA_NACK:
 238:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto quit;
 239:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 240:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_ARB_LOST:
 241:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto begin;
 242:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 243:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     default:
 244:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto error;		/* must send stop condition */
 245:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     }
 246:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 247:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   /*
 248:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****    * Note [12]
 249:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****    * Next cycle(s): master receiver mode
 250:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****    */
 251:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWSTA) | _BV(TWEN); /* send (rep.) start condition */
 252:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 253:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   switch ((twst = TW_STATUS))
 254:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 255:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_START:		/* OK, but should not happen */
 256:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_REP_START:
 257:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       break;
 258:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 259:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_ARB_LOST:
 260:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto begin;
 261:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 262:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     default:
 263:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto error;
 264:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     }
 265:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 266:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   /* send SLA+R */
 267:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWDR = sla | TW_READ;
 447               	.LM14:
 448 004c B92F      		mov r27,r25
 449 004e B160      		ori r27,lo8(1)
 450               	.L5:
 451 0050 3150      		subi r19,lo8(-(-1))
 188:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     return -1;
 453               	.LM15:
 454 0052 01F4      		brne .+2
 455 0054 00C0      		rjmp .L72
 456               	.L11:
 192:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 458               	.LM16:
 459 0056 A093 BC00 		sts 188,r26
 460               	.L12:
 193:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   switch ((twst = TW_STATUS))
 462               	.LM17:
 463 005a 2091 BC00 		lds r18,188
 464 005e 27FF      		sbrs r18,7
 465 0060 00C0      		rjmp .L12
 194:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 467               	.LM18:
 468 0062 2091 B900 		lds r18,185
 469 0066 287F      		andi r18,lo8(-8)
 470 0068 2093 0000 		sts twst,r18
 471 006c 2031      		cpi r18,lo8(16)
 472 006e 01F0      		breq .L13
 473 0070 2833      		cpi r18,lo8(56)
 474 0072 01F0      		breq .L11
 475 0074 2830      		cpi r18,lo8(8)
 476 0076 01F0      		breq .+2
 477 0078 00C0      		rjmp .L72
 478               	.L13:
 210:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWEN); /* clear interrupt to start transmission */
 480               	.LM19:
 481 007a 9093 BB00 		sts 187,r25
 211:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 483               	.LM20:
 484 007e E093 BC00 		sts 188,r30
 485               	.L14:
 212:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   switch ((twst = TW_STATUS))
 487               	.LM21:
 488 0082 2091 BC00 		lds r18,188
 489 0086 27FF      		sbrs r18,7
 490 0088 00C0      		rjmp .L14
 213:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 492               	.LM22:
 493 008a 2091 B900 		lds r18,185
 494 008e 287F      		andi r18,lo8(-8)
 495 0090 2093 0000 		sts twst,r18
 496 0094 2032      		cpi r18,lo8(32)
 497 0096 01F0      		breq .L5
 498 0098 2833      		cpi r18,lo8(56)
 499 009a 01F0      		breq .L11
 500 009c 2831      		cpi r18,lo8(24)
 501 009e 01F0      		breq .+2
 502 00a0 00C0      		rjmp .L75
 229:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWEN); /* clear interrupt to start transmission */
 504               	.LM23:
 505 00a2 8093 BB00 		sts 187,r24
 230:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 507               	.LM24:
 508 00a6 E093 BC00 		sts 188,r30
 509               	.L17:
 231:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   switch ((twst = TW_STATUS))
 511               	.LM25:
 512 00aa 2091 BC00 		lds r18,188
 513 00ae 27FF      		sbrs r18,7
 514 00b0 00C0      		rjmp .L17
 232:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 516               	.LM26:
 517 00b2 2091 B900 		lds r18,185
 518 00b6 287F      		andi r18,lo8(-8)
 519 00b8 2093 0000 		sts twst,r18
 520 00bc 2033      		cpi r18,lo8(48)
 521 00be 01F4      		brne .+2
 522 00c0 00C0      		rjmp .L36
 523 00c2 2833      		cpi r18,lo8(56)
 524 00c4 01F0      		breq .L11
 525 00c6 2832      		cpi r18,lo8(40)
 526 00c8 01F0      		breq .+2
 527 00ca 00C0      		rjmp .L75
 251:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 529               	.LM27:
 530 00cc F093 BC00 		sts 188,r31
 531               	.L20:
 252:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   switch ((twst = TW_STATUS))
 533               	.LM28:
 534 00d0 2091 BC00 		lds r18,188
 535 00d4 27FF      		sbrs r18,7
 536 00d6 00C0      		rjmp .L20
 253:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 538               	.LM29:
 539 00d8 2091 B900 		lds r18,185
 540 00dc 287F      		andi r18,lo8(-8)
 541 00de 2093 0000 		sts twst,r18
 542 00e2 2031      		cpi r18,lo8(16)
 543 00e4 01F0      		breq .L21
 544 00e6 2833      		cpi r18,lo8(56)
 545 00e8 01F4      		brne .+2
 546 00ea 00C0      		rjmp .L11
 547 00ec 2830      		cpi r18,lo8(8)
 548 00ee 01F4      		brne .L75
 549               	.L21:
 551               	.LM30:
 552 00f0 B093 BB00 		sts 187,r27
 268:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWEN); /* clear interrupt to start transmission */
 554               	.LM31:
 555 00f4 E093 BC00 		sts 188,r30
 556               	.L22:
 269:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 558               	.LM32:
 559 00f8 2091 BC00 		lds r18,188
 560 00fc 27FF      		sbrs r18,7
 561 00fe 00C0      		rjmp .L22
 270:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   switch ((twst = TW_STATUS))
 563               	.LM33:
 564 0100 2091 B900 		lds r18,185
 565 0104 287F      		andi r18,lo8(-8)
 566 0106 2093 0000 		sts twst,r18
 567 010a 2034      		cpi r18,lo8(64)
 568 010c 01F0      		breq .L24
 569 010e 2834      		cpi r18,lo8(72)
 570 0110 01F0      		breq .L36
 571 0112 2833      		cpi r18,lo8(56)
 572 0114 01F4      		brne .L75
 573 0116 00C0      		rjmp .L11
 574               	.L24:
 575 0118 FA01      		movw r30,r20
 576 011a 94EC      		ldi r25,lo8(-60)
 577               	.L25:
 578 011c 9F01      		movw r18,r30
 579 011e 241B      		sub r18,r20
 580 0120 350B      		sbc r19,r21
 271:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 272:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MR_SLA_ACK:
 273:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       break;
 274:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 275:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MR_SLA_NACK:
 276:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto quit;
 277:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 278:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MR_ARB_LOST:
 279:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto begin;
 280:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 281:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     default:
 282:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto error;
 283:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     }
 284:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 285:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   for (twcr = _BV(TWINT) | _BV(TWEN) | _BV(TWEA) /* Note [13] */;
 582               	.LM34:
 583 0122 1616      		cp __zero_reg__,r22
 584 0124 1706      		cpc __zero_reg__,r23
 585 0126 04F4      		brge .L15
 286:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****        len > 0;
 287:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****        len--)
 288:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 289:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       if (len == 1)
 587               	.LM35:
 588 0128 6130      		cpi r22,1
 589 012a 7105      		cpc r23,__zero_reg__
 590 012c 01F4      		brne .L26
 290:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	twcr = _BV(TWINT) | _BV(TWEN); /* send NAK this time */
 592               	.LM36:
 593 012e 94E8      		ldi r25,lo8(-124)
 594               	.L26:
 291:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       TWCR = twcr;		/* clear int to start transmission */
 596               	.LM37:
 597 0130 9093 BC00 		sts 188,r25
 598               	.L27:
 292:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 600               	.LM38:
 601 0134 8091 BC00 		lds r24,188
 602 0138 87FF      		sbrs r24,7
 603 013a 00C0      		rjmp .L27
 293:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       switch ((twst = TW_STATUS))
 605               	.LM39:
 606 013c 8091 B900 		lds r24,185
 607 0140 887F      		andi r24,lo8(-8)
 608 0142 8093 0000 		sts twst,r24
 609 0146 8035      		cpi r24,lo8(80)
 610 0148 01F0      		breq .L28
 611 014a 8835      		cpi r24,lo8(88)
 612 014c 01F4      		brne .L75
 294:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	{
 295:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	case TW_MR_DATA_NACK:
 296:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	  len = 0;		/* force end of loop */
 614               	.LM40:
 615 014e 60E0      		ldi r22,0
 616 0150 70E0      		ldi r23,0
 617               	.L28:
 297:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	  /* FALLTHROUGH */
 298:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	case TW_MR_DATA_ACK:
 299:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	  *buf++ = TWDR;
 619               	.LM41:
 620 0152 8091 BB00 		lds r24,187
 621 0156 8193      		st Z+,r24
 287:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 623               	.LM42:
 624 0158 6150      		subi r22,1
 625 015a 7109      		sbc r23,__zero_reg__
 626 015c 00C0      		rjmp .L25
 627               	.L36:
 178:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 629               	.LM43:
 630 015e 20E0      		ldi r18,0
 631 0160 30E0      		ldi r19,0
 632 0162 00C0      		rjmp .L15
 633               	.L75:
 300:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	  rv++;
 301:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	  break;
 302:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 303:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	default:
 304:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	  goto error;
 305:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	}
 306:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     }
 307:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   quit:
 308:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   /* Note [14] */
 309:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWSTO) | _BV(TWEN); /* send stop condition */
 310:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 311:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   return rv;
 312:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 313:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   error:
 314:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   rv = -1;
 635               	.LM44:
 636 0164 2FEF      		ldi r18,lo8(-1)
 637 0166 3FEF      		ldi r19,lo8(-1)
 638               	.L15:
 309:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 640               	.LM45:
 641 0168 84E9      		ldi r24,lo8(-108)
 642 016a 8093 BC00 		sts 188,r24
 311:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 644               	.LM46:
 645 016e C901      		movw r24,r18
 646 0170 0895      		ret
 647               	.L72:
 204:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 				/* NB: do /not/ send stop condition */
 649               	.LM47:
 650 0172 8FEF      		ldi r24,lo8(-1)
 651 0174 9FEF      		ldi r25,lo8(-1)
 315:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   goto quit;
 316:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** }
 653               	.LM48:
 654 0176 0895      		ret
 661               	.Lscope4:
 663               		.stabd	78,0,0
 667               	.global	ee24xx_write_page
 669               	ee24xx_write_page:
 670               		.stabd	46,0,0
 317:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 318:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
 319:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Write "len" bytes into EEPROM starting at "eeaddr" from "buf".
 320:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  *
 321:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * This is a bit simpler than the previous function since both, the
 322:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * address and the data bytes will be transfered in master transmitter
 323:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * mode, thus no reselection of the device is necessary.  However, the
 324:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * EEPROMs are only capable of writing one "page" simultaneously, so
 325:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * care must be taken to not cross a page boundary within one write
 326:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * cycle.  The amount of data one page consists of varies from
 327:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * manufacturer to manufacturer: some vendors only use 8-byte pages
 328:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * for the smaller devices, and 16-byte pages for the larger devices,
 329:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * while other vendors generally use 16-byte pages.  We thus use the
 330:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * smallest common denominator of 8 bytes per page, declared by the
 331:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * macro PAGE_SIZE above.
 332:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  *
 333:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * The function simply returns after writing one page, returning the
 334:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * actual number of data byte written.  It is up to the caller to
 335:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * re-invoke it in order to write further data.
 336:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
 337:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** int
 338:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** ee24xx_write_page(uint16_t eeaddr, int len, uint8_t *buf)
 339:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** {
 672               	.LM49:
 673               	.LFBB5:
 674               	/* prologue: function */
 675               	/* frame size = 0 */
 676               	/* stack size = 0 */
 677               	.L__stack_usage = 0
 678 0178 9C01      		movw r18,r24
 340:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   uint8_t sla, n = 0;
 341:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   int rv = 0;
 342:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   uint16_t endaddr;
 343:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 344:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 345:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 346:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   if (eeaddr + len < (eeaddr | (PAGE_SIZE - 1)))
 680               	.LM50:
 681 017a 680F      		add r22,r24
 682 017c 791F      		adc r23,r25
 683 017e 8760      		ori r24,7
 684 0180 6817      		cp r22,r24
 685 0182 7907      		cpc r23,r25
 686 0184 00F0      		brlo .L78
 347:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     endaddr = eeaddr + len;
 348:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   else
 349:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     endaddr = (eeaddr | (PAGE_SIZE - 1)) + 1;
 688               	.LM51:
 689 0186 BC01      		movw r22,r24
 690 0188 6F5F      		subi r22,-1
 691 018a 7F4F      		sbci r23,-1
 692               	.L78:
 350:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   len = endaddr - eeaddr;
 351:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 352:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   /* patch high bits of EEPROM address into SLA */
 353:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   sla = i2c_address | (((eeaddr >> 8) & 0x07) << 1);
 694               	.LM52:
 695 018c 832F      		mov r24,r19
 696 018e 8770      		andi r24,lo8(7)
 697 0190 880F      		lsl r24
 698 0192 9091 0000 		lds r25,i2c_address
 699 0196 892B      		or r24,r25
 700 0198 E5E6      		ldi r30,lo8(101)
 354:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 355:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   restart:
 356:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   if (n++ >= MAX_ITER)
 357:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     return -1;
 358:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   begin:
 359:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 360:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   /* Note [15] */
 361:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWSTA) | _BV(TWEN); /* send start condition */
 702               	.LM53:
 703 019a A4EA      		ldi r26,lo8(-92)
 362:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 363:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   switch ((twst = TW_STATUS))
 364:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 365:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_REP_START:		/* OK, but should not happen */
 366:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_START:
 367:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       break;
 368:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 369:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_ARB_LOST:
 370:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto begin;
 371:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 372:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     default:
 373:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****         return -1;		/* error: not in start condition */
 374:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 				/* NB: do /not/ send stop condition */
 375:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     }
 376:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 377:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   /* send SLA+W */
 378:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWDR = sla | TW_WRITE;
 379:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWEN); /* clear interrupt to start transmission */
 705               	.LM54:
 706 019c F4E8      		ldi r31,lo8(-124)
 707               	.L79:
 708 019e E150      		subi r30,lo8(-(-1))
 356:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     return -1;
 710               	.LM55:
 711 01a0 01F4      		brne .+2
 712 01a2 00C0      		rjmp .L120
 713               	.L83:
 361:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 715               	.LM56:
 716 01a4 A093 BC00 		sts 188,r26
 717               	.L84:
 362:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 719               	.LM57:
 720 01a8 9091 BC00 		lds r25,188
 721 01ac 97FF      		sbrs r25,7
 722 01ae 00C0      		rjmp .L84
 363:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 724               	.LM58:
 725 01b0 9091 B900 		lds r25,185
 726 01b4 987F      		andi r25,lo8(-8)
 727 01b6 9093 0000 		sts twst,r25
 728 01ba 9031      		cpi r25,lo8(16)
 729 01bc 01F0      		breq .L85
 730 01be 9833      		cpi r25,lo8(56)
 731 01c0 01F0      		breq .L83
 732 01c2 9830      		cpi r25,lo8(8)
 733 01c4 01F0      		breq .+2
 734 01c6 00C0      		rjmp .L120
 735               	.L85:
 378:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWEN); /* clear interrupt to start transmission */
 737               	.LM59:
 738 01c8 8093 BB00 		sts 187,r24
 740               	.LM60:
 741 01cc F093 BC00 		sts 188,r31
 742               	.L86:
 380:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 744               	.LM61:
 745 01d0 9091 BC00 		lds r25,188
 746 01d4 97FF      		sbrs r25,7
 747 01d6 00C0      		rjmp .L86
 381:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   switch ((twst = TW_STATUS))
 749               	.LM62:
 750 01d8 9091 B900 		lds r25,185
 751 01dc 987F      		andi r25,lo8(-8)
 752 01de 9093 0000 		sts twst,r25
 753 01e2 9032      		cpi r25,lo8(32)
 754 01e4 01F0      		breq .L79
 755 01e6 9833      		cpi r25,lo8(56)
 756 01e8 01F0      		breq .L83
 757 01ea 9831      		cpi r25,lo8(24)
 758 01ec 01F4      		brne .L122
 382:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 383:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_SLA_ACK:
 384:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       break;
 385:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 386:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_SLA_NACK:	/* nack during select: device busy writing */
 387:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto restart;
 388:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 389:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_ARB_LOST:	/* re-arbitrate */
 390:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto begin;
 391:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 392:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     default:
 393:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****         goto error;		/* must send stop condition */
 394:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     }
 395:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 396:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWDR = eeaddr;		/* low 8 bits of addr */
 760               	.LM63:
 761 01ee 2093 BB00 		sts 187,r18
 397:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWEN); /* clear interrupt to start transmission */
 763               	.LM64:
 764 01f2 F093 BC00 		sts 188,r31
 765               	.L89:
 398:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 767               	.LM65:
 768 01f6 9091 BC00 		lds r25,188
 769 01fa 97FF      		sbrs r25,7
 770 01fc 00C0      		rjmp .L89
 399:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   switch ((twst = TW_STATUS))
 772               	.LM66:
 773 01fe 9091 B900 		lds r25,185
 774 0202 987F      		andi r25,lo8(-8)
 775 0204 9093 0000 		sts twst,r25
 776 0208 9033      		cpi r25,lo8(48)
 777 020a 01F0      		breq .L99
 778 020c 9833      		cpi r25,lo8(56)
 779 020e 01F0      		breq .L83
 780 0210 9832      		cpi r25,lo8(40)
 781 0212 01F4      		brne .L122
 350:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 783               	.LM67:
 784 0214 621B      		sub r22,r18
 785 0216 730B      		sbc r23,r19
 786 0218 FA01      		movw r30,r20
 787 021a 20E0      		ldi r18,0
 788 021c 30E0      		ldi r19,0
 400:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 401:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_DATA_ACK:
 402:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       break;
 403:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 404:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_DATA_NACK:
 405:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto quit;
 406:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 407:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     case TW_MT_ARB_LOST:
 408:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       goto begin;
 409:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 410:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     default:
 411:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 412:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****         goto error;		/* must send stop condition */
 413:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     }
 414:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 415:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   for (; len > 0; len--)
 416:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 417:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       TWDR = *buf++;
 418:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       TWCR = _BV(TWINT) | _BV(TWEN); /* start transmission */
 790               	.LM68:
 791 021e 44E8      		ldi r20,lo8(-124)
 792               	.L92:
 793 0220 CB01      		movw r24,r22
 794 0222 821B      		sub r24,r18
 795 0224 930B      		sbc r25,r19
 415:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 797               	.LM69:
 798 0226 1816      		cp __zero_reg__,r24
 799 0228 1906      		cpc __zero_reg__,r25
 800 022a 04F4      		brge .L87
 417:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       TWCR = _BV(TWINT) | _BV(TWEN); /* start transmission */
 802               	.LM70:
 803 022c 8191      		ld r24,Z+
 804 022e 8093 BB00 		sts 187,r24
 806               	.LM71:
 807 0232 4093 BC00 		sts 188,r20
 808               	.L93:
 419:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       while ((TWCR & _BV(TWINT)) == 0) ; /* wait for transmission */
 810               	.LM72:
 811 0236 8091 BC00 		lds r24,188
 812 023a 87FF      		sbrs r24,7
 813 023c 00C0      		rjmp .L93
 420:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       switch ((twst = TW_STATUS))
 815               	.LM73:
 816 023e 8091 B900 		lds r24,185
 817 0242 887F      		andi r24,lo8(-8)
 818 0244 8093 0000 		sts twst,r24
 819 0248 8832      		cpi r24,lo8(40)
 820 024a 01F4      		brne .L122
 421:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	{
 422:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	case TW_MT_DATA_NACK:
 423:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	  goto error;		/* device write protected -- Note [16] */
 424:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 425:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	case TW_MT_DATA_ACK:
 426:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	  rv++;
 822               	.LM74:
 823 024c 2F5F      		subi r18,-1
 824 024e 3F4F      		sbci r19,-1
 825 0250 00C0      		rjmp .L92
 826               	.L99:
 341:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   uint16_t endaddr;
 828               	.LM75:
 829 0252 20E0      		ldi r18,0
 830 0254 30E0      		ldi r19,0
 831 0256 00C0      		rjmp .L87
 832               	.L122:
 427:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	  break;
 428:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 429:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	default:
 430:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****             goto error;
 431:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	}
 432:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     }
 433:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   quit:
 434:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   TWCR = _BV(TWINT) | _BV(TWSTO) | _BV(TWEN); /* send stop condition */
 435:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 436:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   return rv;
 437:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 438:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   error:
 439:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   rv = -1;
 834               	.LM76:
 835 0258 2FEF      		ldi r18,lo8(-1)
 836 025a 3FEF      		ldi r19,lo8(-1)
 837               	.L87:
 434:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 839               	.LM77:
 840 025c 84E9      		ldi r24,lo8(-108)
 841 025e 8093 BC00 		sts 188,r24
 436:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 843               	.LM78:
 844 0262 C901      		movw r24,r18
 845 0264 0895      		ret
 846               	.L120:
 373:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 				/* NB: do /not/ send stop condition */
 848               	.LM79:
 849 0266 8FEF      		ldi r24,lo8(-1)
 850 0268 9FEF      		ldi r25,lo8(-1)
 440:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   goto quit;
 441:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** }
 852               	.LM80:
 853 026a 0895      		ret
 860               	.Lscope5:
 862               		.stabd	78,0,0
 867               	.global	ee24xx_write_bytes
 869               	ee24xx_write_bytes:
 870               		.stabd	46,0,0
 442:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 443:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** /*
 444:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * Wrapper around ee24xx_write_page() that repeats calling this
 445:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * function until either an error has been returned, or all bytes
 446:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  * have been written.
 447:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****  */
 448:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** int
 449:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** ee24xx_write_bytes(uint16_t eeaddr, int len, uint8_t *buf)
 450:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** {
 872               	.LM81:
 873               	.LFBB6:
 874 026c CF92      		push r12
 875 026e DF92      		push r13
 876 0270 EF92      		push r14
 877 0272 FF92      		push r15
 878 0274 0F93      		push r16
 879 0276 1F93      		push r17
 880 0278 CF93      		push r28
 881 027a DF93      		push r29
 882               	/* prologue: function */
 883               	/* frame size = 0 */
 884               	/* stack size = 8 */
 885               	.L__stack_usage = 8
 886 027c 6C01      		movw r12,r24
 887 027e 8B01      		movw r16,r22
 888 0280 7A01      		movw r14,r20
 451:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   int rv, total;
 452:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 453:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 454:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 455:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   total = 0;
 890               	.LM82:
 891 0282 C0E0      		ldi r28,0
 892 0284 D0E0      		ldi r29,0
 893               	.L125:
 456:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   do
 457:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     {
 458:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #if DEBUG
 459:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       printf("Calling ee24xx_write_page(%d, %d, %p)",
 460:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	     eeaddr, len, buf);
 461:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #endif
 462:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       rv = ee24xx_write_page(eeaddr, len, buf);
 895               	.LM83:
 896 0286 A701      		movw r20,r14
 897 0288 B801      		movw r22,r16
 898 028a C601      		movw r24,r12
 899 028c 0E94 0000 		call ee24xx_write_page
 463:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #if DEBUG
 464:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       printf(" => %d\n", rv);
 465:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** #endif
 466:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       if (rv == -1)
 901               	.LM84:
 902 0290 8F3F      		cpi r24,-1
 903 0292 2FEF      		ldi r18,-1
 904 0294 9207      		cpc r25,r18
 905 0296 01F0      		breq .L126
 467:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 	return -1;
 468:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       eeaddr += rv;
 907               	.LM85:
 908 0298 C80E      		add r12,r24
 909 029a D91E      		adc r13,r25
 469:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       len -= rv;
 911               	.LM86:
 912 029c 081B      		sub r16,r24
 913 029e 190B      		sbc r17,r25
 470:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       buf += rv;
 915               	.LM87:
 916 02a0 E80E      		add r14,r24
 917 02a2 F91E      		adc r15,r25
 471:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       total += rv;
 919               	.LM88:
 920 02a4 C80F      		add r28,r24
 921 02a6 D91F      		adc r29,r25
 472:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****     }
 473:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   while (len > 0);
 923               	.LM89:
 924 02a8 1016      		cp __zero_reg__,r16
 925 02aa 1106      		cpc __zero_reg__,r17
 926 02ac 04F0      		brlt .L125
 474:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 475:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   return total;
 928               	.LM90:
 929 02ae CE01      		movw r24,r28
 930 02b0 00C0      		rjmp .L124
 931               	.L126:
 467:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****       eeaddr += rv;
 933               	.LM91:
 934 02b2 8FEF      		ldi r24,lo8(-1)
 935 02b4 9FEF      		ldi r25,lo8(-1)
 936               	.L124:
 937               	/* epilogue start */
 476:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** }
 939               	.LM92:
 940 02b6 DF91      		pop r29
 941 02b8 CF91      		pop r28
 942 02ba 1F91      		pop r17
 943 02bc 0F91      		pop r16
 944 02be FF90      		pop r15
 945 02c0 EF90      		pop r14
 946 02c2 DF90      		pop r13
 947 02c4 CF90      		pop r12
 948 02c6 0895      		ret
 954               	.Lscope6:
 956               		.stabd	78,0,0
 957               		.section	.rodata.str1.1,"aMS",@progbits,1
 958               	.LC0:
 959 0000 6572 726F 		.string	"error: TWI status %#x\n"
 959      723A 2054 
 959      5749 2073 
 959      7461 7475 
 959      7320 2523 
 960               		.text
 962               	.global	error
 964               	error:
 965               		.stabd	46,0,0
 477:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 478:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** void
 479:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** error(void)
 480:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** {
 967               	.LM93:
 968               	.LFBB7:
 969               	/* prologue: function */
 970               	/* frame size = 0 */
 971               	/* stack size = 0 */
 972               	.L__stack_usage = 0
 481:../../../src/drivers/platform/firefly3/source/twi_base_calls.c **** 
 482:../../../src/drivers/platform/firefly3/source/twi_base_calls.c ****   printf("error: TWI status %#x\n", twst);
 974               	.LM94:
 975 02c8 8091 0000 		lds r24,twst
 976 02cc 1F92      		push __zero_reg__
 977 02ce 8F93      		push r24
 978 02d0 80E0      		ldi r24,lo8(.LC0)
 979 02d2 90E0      		ldi r25,hi8(.LC0)
 980 02d4 9F93      		push r25
 981 02d6 8F93      		push r24
 982 02d8 0E94 0000 		call printf
 983 02dc 0F90      		pop __tmp_reg__
 984 02de 0F90      		pop __tmp_reg__
 985 02e0 0F90      		pop __tmp_reg__
 986 02e2 0F90      		pop __tmp_reg__
 987 02e4 0895      		ret
 989               	.Lscope7:
 991               		.stabd	78,0,0
 992               		.comm	i2c_address,1,1
 993               		.comm	twst,1,1
 994               		.comm	app_timer0_prescale,1,1
 995               		.comm	app_timer0_callback,2,1
 996               		.comm	_nrk_time_trigger,1,1
 997               		.comm	_nrk_prev_timer_val,1,1
 998               		.comm	error_num,1,1
 999               		.comm	error_task,1,1
 1000               		.comm	nrk_kernel_stk_ptr,2,1
 1001               		.comm	nrk_idle_task_stk,128,1
 1002               		.comm	_nrk_signal_list,4,1
 1015               	.Letext0:
 1016               		.ident	"GCC: (GNU) 4.9.1"
 1017               	.global __do_copy_data
 1018               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 twi_base_calls.c
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:4      *ABS*:000000000000003f __SREG__
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:5      *ABS*:000000000000003b __RAMPZ__
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:6      *ABS*:0000000000000000 __tmp_reg__
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:7      *ABS*:0000000000000001 __zero_reg__
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:333    .text:0000000000000000 set_i2c_device
                            *COM*:0000000000000001 i2c_address
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:353    .text:0000000000000006 init_i2c
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:391    .text:0000000000000026 close_i2c
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:423    .text:000000000000003a ee24xx_read_bytes
                            *COM*:0000000000000001 twst
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:669    .text:0000000000000178 ee24xx_write_page
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:869    .text:000000000000026c ee24xx_write_bytes
/var/folders/5w/cgn1dq610yqf6q25zlv0gqm40000gn/T//ccGw5xb2.s:964    .text:00000000000002c8 error
                            *COM*:0000000000000001 app_timer0_prescale
                            *COM*:0000000000000002 app_timer0_callback
                            *COM*:0000000000000001 _nrk_time_trigger
                            *COM*:0000000000000001 _nrk_prev_timer_val
                            *COM*:0000000000000001 error_num
                            *COM*:0000000000000001 error_task
                            *COM*:0000000000000002 nrk_kernel_stk_ptr
                            *COM*:0000000000000080 nrk_idle_task_stk
                            *COM*:0000000000000004 _nrk_signal_list

UNDEFINED SYMBOLS
printf
__do_copy_data
__do_clear_bss
